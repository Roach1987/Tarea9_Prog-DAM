package programacion.dam.tarea9.ventanas;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import programacion.dam.tarea9.beans.CuentaBancaria;
import programacion.dam.tarea9.util.Util;

/**
 *
 * @author Roach
 */
public class ListadoCuentas extends javax.swing.JPanel {

    // Atributos
    private DefaultTableModel modelo;
    
    /**
     * Creates new form ListadoCuentas
     */
    public ListadoCuentas() {
        initComponents();
        
        // Pintamos los atributos mas importantes de los articulos.
        String[] columnas = {"Código de Cuenta", "Titular", "Saldo Actual"};
        modelo = new DefaultTableModel(null, columnas);

        // Cargamos la lista de cuentas bancarias.
        this.cargarListaCuentasBancarias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCuentasBancarias = new javax.swing.JTable();
        jScrollBar1 = new javax.swing.JScrollBar();

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Listado de Cuentas");

        tablaCuentasBancarias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaCuentasBancarias);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(136, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

// ***************************************************************************************************
// ************************************ Utilidades de la Clase ***************************************
// ***************************************************************************************************
    
    /**
     * Método auxiliar que limpia la tabla.
     */
//    private void borrarTabla(){
//        int longitud = tablaCuentasBancarias.getRowCount()-1;  
//        for(int i = longitud; i >= 0; i--){
//            modelo.removeRow(i);
//        }
//    }
    
    /**
     * Método que carga los articulos que se encuentran en la lista temporal,
     * y recoge los datos mas importantes para cargarlos en la tabla.
     */
    private void cargarListaCuentasBancarias(){
        // Liampiamos la tabla al cargar nuevas cuentas bancarias, para evitar duplicidades.
//        borrarTabla();
        
        ArrayList<CuentaBancaria> listaCuentas = Util.listaCuentasBancarias;
        
        for(CuentaBancaria cuenta : listaCuentas){
            // Creamos un array para recoger los datos necesarios de cada cuenta bancaria.
            String titular = cuenta.getTitular().getNombre().concat(" ").concat(cuenta.getTitular().getApellidos());
            String [] fila = {cuenta.getCcc(), titular, cuenta.getSaldo().toString().concat(" Euros")};
    
            // Añadimos a la tabla los datos de la cuenta actual.
            modelo.addRow(fila);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCuentasBancarias;
    // End of variables declaration//GEN-END:variables
}
