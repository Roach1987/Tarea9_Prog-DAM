/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programacion.dam.tarea9.ventanas;

import javax.swing.JPanel;
import programacion.dam.tarea9.beans.CuentaBancaria;
import programacion.dam.tarea9.util.Util;

/**
 *
 * @author Roach_Mimi
 */
public class Mix extends javax.swing.JPanel {

    // Atributos.
    private String distintivo;
    private String ccc;
    private String saldo;
    
    /**
     * Creates new form Varios
     */
    public Mix() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lVarios = new javax.swing.JLabel();
        tVarios = new javax.swing.JTextField();
        bVarios = new javax.swing.JButton();
        lCCC = new javax.swing.JLabel();
        lCuenta = new javax.swing.JLabel();

        lVarios.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        lVarios.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lVarios.setText("Varios");

        tVarios.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        bVarios.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        bVarios.setText("Varios");
        bVarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVariosActionPerformed(evt);
            }
        });

        lCCC.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lCCC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lCuenta.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        lCuenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lCuenta.setText("Cuenta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(lVarios, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(bVarios, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tVarios, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lCCC, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(366, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lVarios, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(lCCC, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(tVarios, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(bVarios, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(120, 120, 120)
                    .addComponent(lCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(260, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método en el que pintaremos la ventana segun las necesidades
     * ingresar, retirar y ver el saldo en una cuenta.
     * @param distintivo
     * @param ccc
     * @return Jpanel
     */
    public JPanel ventanaMix(String distintivo, String ccc) {        
     
        // Guardamos en el objeto los atributos llegados por parametro
        this.distintivo = distintivo;
        this.ccc = ccc;
        
        //obtenemos el saldo
        CuentaBancaria cuenta = Util.buscarCuentaBancariaPorCCC(ccc);
        saldo = cuenta.getSaldo().toString();
        
        switch (distintivo) {
            case Util.OPERACION_INGRESAR:
                tVarios.setText("");
                tVarios.setEditable(true);
                lVarios.setText(Util.OPERACION_INGRESAR);
                bVarios.setText(Util.OPERACION_INGRESAR);
                bVarios.setVisible(true);
                lCCC.setText(ccc);
                break;
            case Util.OPERACION_RETIRAR:
                tVarios.setText("");
                tVarios.setEditable(true);
                lVarios.setText(Util.OPERACION_RETIRAR);
                bVarios.setText(Util.OPERACION_RETIRAR);
                bVarios.setVisible(true);
                lCCC.setText(ccc);
                break;
            default:
                tVarios.setText(saldo);       
                tVarios.setEditable(false);
                lVarios.setText(Util.OPERACION_SALDO);
                bVarios.setText(Util.OPERACION_SALDO);
                bVarios.setVisible(false);
                lCCC.setText(ccc);
                break;
        }
        return this;
    }

    /**
     * Acción que realizara el boton varios, estas pueden ser Retirar o Ingresar.
     * @param evt 
     */
    private void bVariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVariosActionPerformed
        Double auxiliarSaldo; 

        if (distintivo.equals(Util.OPERACION_INGRESAR)){
            //validamos si es un dato correcto
            if (Util.validarDouble(tVarios.getText())){
                auxiliarSaldo = Double.parseDouble(tVarios.getText());
                //buscamos la cuenta que corresponde al ccc.
                CuentaBancaria cuenta = Util.buscarCuentaBancariaPorCCC(ccc);

                if(null != cuenta){
                    Util.actualizarCuentaBancariaEnLista(cuenta, Util.OPERACION_INGRESAR, auxiliarSaldo);
                    Util.mostrarMensaje(this, "Se han añadido ".concat(auxiliarSaldo.toString())
                            .concat(" Euros, el total de la cuenta es ").concat(cuenta.getSaldo().toString()
                                    .concat(" Euros.")),
                        Util.SEVERIDAD_INFORMACION);
                    tVarios.setText("");
                }else{
                    Util.mostrarMensaje(this, "La cuenta con ccc ".concat(ccc).concat(" no existe"),
                        Util.SEVERIDAD_ADVERTENCIA);
                }
            }
        }else{
            //validamos si es un dato correcto
            if (Util.validarDouble(tVarios.getText())){
                auxiliarSaldo = Double.parseDouble(tVarios.getText());
                //buscamos la cuenta que corresponde al ccc.
                CuentaBancaria cuenta = Util.buscarCuentaBancariaPorCCC(ccc);

                if(null != cuenta){
                    if(cuenta.getSaldo() >= auxiliarSaldo){
                        // Actualizamos el saldo de la cuanta bancaria.
                        Util.actualizarCuentaBancariaEnLista(cuenta, Util.OPERACION_RETIRAR, auxiliarSaldo);
                        Util.mostrarMensaje(this, "Se han retirado ".concat(auxiliarSaldo.toString())
                            .concat(" Euros, el total de la cuenta es ").concat(cuenta.getSaldo().toString()
                                    .concat(" Euros.")),
                        Util.SEVERIDAD_INFORMACION);
                    }else{
                        Util.mostrarMensaje(this, "La cantidad a retirar es mayor a la cantidad disponible en cuenta.",
                            Util.SEVERIDAD_INFORMACION);
                    }
                }else{
                    Util.mostrarMensaje(this, "La cuenta con ccc ".concat(ccc).concat(" no existe"),
                        Util.SEVERIDAD_ADVERTENCIA);
                }
            }
        }
    }//GEN-LAST:event_bVariosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bVarios;
    private javax.swing.JLabel lCCC;
    private javax.swing.JLabel lCuenta;
    private javax.swing.JLabel lVarios;
    private javax.swing.JTextField tVarios;
    // End of variables declaration//GEN-END:variables
}
